apiVersion: v1
kind: Namespace
metadata:
  name: lateral-movement-build
  labels:
    managed-by: spyderbat-eval
---
apiVersion: v1
kind: Namespace
metadata:
  name: lateral-movement-prod
  labels:
    managed-by: spyderbat-eval
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongo-setup
  namespace: lateral-movement-prod
  labels:
    managed-by: spyderbat-eval
data:
  setup.js: |
    db.createUser({user: "payroll-calc", pwd: "secure-password", roles: ["dbOwner"]})
    db.createCollection('payrolldata', {capped: false})
    db.payrolldata.insert([
      {
        item: 'Bob',
        qty: 2500,
        tags: ['hourly'],
        date: 'Tue Jul 04 02:16:28 PM CDT 2024'
      },
      {
        item: 'Joe',
        qty: 4500,
        tags: ['salary'],
        date: 'Tue Jul 05 02:17:48 PM CDT 2024'
      },
      {
        item: 'Sally',
        qty: 4000,
        tags: ['salary'],
        date: 'Tue Jul 05 02:26:36 PM CDT 2024'
      }
    ]);
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payrolldb
  namespace: lateral-movement-prod
  labels:
    app: payroll
    tier: backend
    env: prod
    managed-by: spyderbat-eval
spec:
  selector:
    matchLabels:
      name: payrolldb
  replicas: 1
  template:
    metadata:
      labels:
        name: payrolldb
        app: payroll
        tier: backend
        env: prod
    spec:
      containers:
      - name: payrolldb
        image: mongo:latest
        env:
        - name: MONGODB_DATABASE
          value: payrolldb
        ports:
        - containerPort: 27017
        volumeMounts:
        - name: mongo-setup
          mountPath: /docker-entrypoint-initdb.d/
      volumes:
        - name: mongo-setup
          configMap:
            name: mongo-setup
            items:
              - key: setup.js
                path: setup.js
---
apiVersion: v1
kind: Service
metadata:
  name: payrolldb
  namespace: lateral-movement-prod
  labels:
    app: payroll
    tier: backend
    env: prod
    managed-by: spyderbat-eval
spec:
  ports:
  - port: 27017
    protocol: TCP
  selector:
    name: payrolldb
---
# an extra configmap to inject a fake bash history
apiVersion: v1
kind: ConfigMap
metadata:
  name: fake-bob-history
  namespace: lateral-movement-build
  labels:
    managed-by: spyderbat-eval
data:
  .bash_history: |
    ls
    kubectl config view
    kubectl get pods -A
    kubectl get pods -n lateral-movement-prod
    kubectl describe pods -n lateral-movement-prod
    kubectl exec -n lateral-movement-prod payrolldb-6f7996c855-vrmrt -- hostname
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: build-sa
  namespace: lateral-movement-build
  labels:
    managed-by: spyderbat-eval
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: role:dev
  namespace: lateral-movement-prod
  labels:
    managed-by: spyderbat-eval
rules:
  - apiGroups:
      - ''
    resources:
      - pods
      - pods/exec
    verbs:
      - create
      - get
      - list
      - exec
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: build-dev-rb
  namespace: lateral-movement-prod
  labels:
    managed-by: spyderbat-eval
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: role:dev
subjects:
  - kind: ServiceAccount
    name: build-sa
    namespace: lateral-movement-build
---
apiVersion: v1
kind: Pod
metadata:
  name: bobdev
  namespace: lateral-movement-build
  labels:
    managed-by: spyderbat-eval
spec:
  serviceAccountName: build-sa
  containers:
  - name: bobdev-container
    image: public.ecr.aws/a6j2k0g1/devops-container
    volumeMounts:
    - name: fake-bob-history
      mountPath: /root
  volumes:
    - name: fake-bob-history
      configMap:
        name: fake-bob-history
        items:
          - key: .bash_history
            path: .bash_history

